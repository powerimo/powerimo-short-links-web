pipeline {
    environment {
        // Docker repository
        DOCKER_REPO = "${env.DOCKER_REPO_PREFIX}"

        imagename = "${env.DOCKER_REPO}/powerimo/short-links-web"
        FULL_PATH_BRANCH = "${env.BRANCH_NAME}"
        BRANCH_VERSION = "${env.BRANCH_NAME}".tokenize('/').last()
        GIT_COMMIT_SHORT = "${env.GIT_COMMIT.take(7)}"

        // Notifications
        NSS_API_KEY = credentials('powerimo-nss-api-key')

        // Deployment host parameters
        SSH_PORT = "${SSH_DEFAULT_PORT}"
        HOST_PROD = "${POWERIMO_HOST_PROD}"
    }

    tools {
        nodejs 'node20'
    }

    agent any

    stages {
        stage('Initialization') {
            steps {
                sh 'npm version'
                echo "FULL_PATH_BRANCH=${env.FULL_PATH_BRANCH}"
                echo "BRANCH_VERSION=${env.BRANCH_VERSION}"
                echo "BRANCH_NAME=${env.BRANCH_NAME}"
                echo "GIT_COMMIT_SHORT=${env.GIT_COMMIT_SHORT}"
            }
        }

        stage('Update npm') {
            steps {
                sh 'npm install --location=global pnpm'
                sh 'pnpm install'
            }
        }

        stage('Build') {
            when {
                anyOf {
                    branch 'qa'
                    branch pattern: "release/.*", comparator: "REGEXP"
                }
            }
            steps {
                sh 'pnpm build'
            }
        }

        stage('Docker Build and Push') {
            when {
                anyOf {
                    branch 'qa'
                    branch pattern: "release/.*", comparator: "REGEXP"
                }
            }
            steps {
                script {
                    echo "DOCKER_REPO=${DOCKER_REPO}"
                    def tag = "${env.BRANCH_NAME == 'qa' ? 'qa' : env.BRANCH_VERSION}-${GIT_COMMIT_SHORT}"
                    def tag2 = "${env.BRANCH_NAME == 'qa' ? 'qa' : env.BRANCH_VERSION}"
                    def dockerImage = "$imagename:$tag"
                    def dockerImage2 = "$imagename:$tag2"
                    sh "docker build -t ${dockerImage} -t ${dockerImage2} ."
                    sh "docker push ${dockerImage}"
                    sh "docker push ${dockerImage2}"
                }
            }
        }

        stage('Deploy QA') {
            when {
                branch 'qa'
            }
            steps {
                script {
                    sh "echo 'Deploying to QA environment'"
                    echo "HOST_PROD=${env.HOST_PROD}"
                    withCredentials([sshUserPrivateKey(credentialsId: 'deployagent', keyFileVariable: 'SSH_I', passphraseVariable: '', usernameVariable: 'SSH_USER_NAME')]) {
                        sh 'scp -o StrictHostKeyChecking=no -P $SSH_PORT -i $SSH_I cicd/scripts/deploy.sh $SSH_USER_NAME@${HOST_PROD}:~/bin/deploy-powerimo-short-links-web-qa.sh'
                        sh 'ssh -o StrictHostKeyChecking=no -p $SSH_PORT -i $SSH_I $SSH_USER_NAME@${HOST_PROD} "chmod +x ~/bin/deploy-powerimo-short-links-web-qa.sh"'
                        sh 'ssh -o StrictHostKeyChecking=no -p $SSH_PORT -i $SSH_I $SSH_USER_NAME@${HOST_PROD} "~/bin/deploy-powerimo-short-links-web-qa.sh QA"'
                    }
                }
            }
        }

        stage('Deploy RELEASE') {
            when {
                anyOf {
                    branch pattern: "release/.*", comparator: "REGEXP"
                }
            }
            steps {
                script {
                    sh "echo 'Deploying to production environment'"
                    echo "HOST_PROD=${env.HOST_PROD}"
                    withCredentials([sshUserPrivateKey(credentialsId: 'deployagent', keyFileVariable: 'SSH_I', passphraseVariable: '', usernameVariable: 'SSH_USER_NAME')]) {
                        sh 'scp -o StrictHostKeyChecking=no -P $SSH_PORT -i $SSH_I cicd/scripts/deploy.sh $SSH_USER_NAME@${HOST_PROD}:~/bin/deploy-powerimo-short-links-web-prod.sh'
                        sh 'ssh -o StrictHostKeyChecking=no -p $SSH_PORT -i $SSH_I $SSH_USER_NAME@${HOST_PROD} "chmod +x ~/bin/deploy-powerimo-short-links-web-prod.sh"'
                        sh 'ssh -o StrictHostKeyChecking=no -p $SSH_PORT -i $SSH_I $SSH_USER_NAME@${HOST_PROD} "~/bin/deploy-powerimo-short-links-web-prod.sh PROD"'
                    }
                }
            }
        }
    }

    post {
        always {
            nssSendJobResult(recipients: "AndewilEventsChannel")
        }
    }
}
